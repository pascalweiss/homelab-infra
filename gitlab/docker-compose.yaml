networks:
  traefik-network:
    name: ${TRAEFIK_NETWORK}

services:
  traefik:
    image: traefik:v2.10.7
    container_name: traefik
    restart: unless-stopped
    environment:
      - TRAEFIK_DASHBOARD_HOST=${TRAEFIK_DASHBOARD_HOST}
      - TRAEFIK_NETWORK=${TRAEFIK_NETWORK}
    ports:
      - "80:80"     # HTTP
      - "8080:8080" # Dashboard
      - "443:443"   # HTTPS (for future TLS)
    networks:
      - traefik-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro  # Allow Traefik to monitor Docker
      - ./traefik/config/traefik.yaml:/etc/traefik/traefik.yaml:ro  # Main configuration file
      - ./traefik/certs:/certs  # TLS certificates (for future use)
    command:
      - "--providers.file.directory=/etc/traefik"
      - "--providers.file.watch=true"
- "--entrypoints.web.address=:80"
- "--entrypoints.websecure.address=:443"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=${TRAEFIK_NETWORK}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${TRAEFIK_DASHBOARD_HOST}`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=web"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=${TRAEFIK_NETWORK}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${TRAEFIK_DASHBOARD_HOST}`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=web"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=${TRAEFIK_NETWORK}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${TRAEFIK_DASHBOARD_HOST}`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=web"

  gitlab:
    image: 'gitlab/gitlab-ce:15.11.13-ce.0'
    container_name: gitlab
    restart: always
    hostname: '${GITLAB_HOSTNAME}'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url "http://${GITLAB_HOSTNAME}"
        gitlab_rails['gitlab_shell_ssh_port'] = ${GITLAB_SSH_PORT}
        
        # Tell GitLab we're running behind a reverse proxy
        nginx['listen_port'] = 80
        nginx['listen_https'] = false
        
        # Configure GitLab to generate URLs with https scheme
        # This makes GitLab generate https links even though it's serving http
        gitlab_rails['gitlab_protocol'] = "https"
        
        # Trust the Traefik proxy - corrected syntax
        nginx['real_ip_trusted_addresses'] = ['172.0.0.0/8', '192.168.0.0/16']
        nginx['real_ip_header'] = 'X-Forwarded-For'
        nginx['real_ip_recursive'] = "on"
        
        # SMTP Configuration (keep your existing config)
        gitlab_rails['smtp_enable'] = ${SMTP_ENABLED}
        gitlab_rails['smtp_address'] = "${SMTP_ADDRESS}"
        # ... remaining SMTP settings
    networks:
      - traefik-network
    ports:
      - '2222:22'  # SSH traffic goes directly to GitLab
    volumes:
      - '${GITLAB_PERSISTENCE}/config:/etc/gitlab'
      - '${GITLAB_PERSISTENCE}/logs:/var/log/gitlab'
      - '${GITLAB_PERSISTENCE}/data:/var/opt/gitlab'
    shm_size: '${GITLAB_SHM_SIZE}'
    labels:
      - "traefik.enable=true"
      # HTTP Router configuration 
      - "traefik.http.routers.gitlab.rule=Host(`${GITLAB_HOSTNAME}`)"
      - "traefik.http.routers.gitlab.entrypoints=web"
      - "traefik.http.middlewares.gitlab-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.gitlab.middlewares=gitlab-redirect"
      # HTTPS Router configuration
      - "traefik.http.routers.gitlab-secure.rule=Host(`${GITLAB_HOSTNAME}`)"
      - "traefik.http.routers.gitlab-secure.entrypoints=websecure"
      - "traefik.http.routers.gitlab-secure.tls=true"
      # Explicitly define a service with a unique name to avoid confusion
      - "traefik.http.services.gitlab-backend.loadbalancer.server.port=80"
      # Link routers to the correct service
      - "traefik.http.routers.gitlab.service=gitlab-backend"
      - "traefik.http.routers.gitlab-secure.service=gitlab-backend"